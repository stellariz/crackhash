services:
  manager:
    container_name: ms-manager
    build:
      context: ./ms-manager
      dockerfile: Dockerfile
    networks:
      - manager-worker-network
      - mongoCluster
    ports:
      - "8080:8080"
    depends_on:
      - localRabbitMQ

  worker:
    build:
      context: ./ms-worker
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    networks:
      - manager-worker-network
    ports:
      - "8081-8083:8081"
    depends_on:
      - localRabbitMQ

  localRabbitMQ:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - manager-worker-network
  mongodb1:
    image: mongo:4
    volumes:
      - mongodata1:/data/db
    ports:
      - "27017:27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1" ]
    networks:
      - mongoCluster
  mongodb2:
    image: mongo:4
    volumes:
      - mongodata2:/data/db
    ports:
      - "27018:27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1" ]
    networks:
      - mongoCluster
  mongodb3:
    image: mongo:4
    volumes:
      - mongodata3:/data/db
    ports:
      - "27019:27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1" ]
    networks:
      - mongoCluster
  mongosetup:
    image: "mongo-setup"
    build: "./mongo-setup"
    container_name: "mongosetup"
    depends_on:
      - mongodb1
    volumes:
      - mongostatus:/data/
    networks:
      - mongoCluster


volumes:
  mongodata1:
  mongodata2:
  mongodata3:
  mongostatus:


networks:
  manager-worker-network:
  mongoCluster: